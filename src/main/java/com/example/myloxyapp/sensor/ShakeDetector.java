/*package com.example.myloxyapp.sensor;


import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;

// By implementing the sensor event listener, it tracks sudden movement from the accelometer
// Meant to be used for the background service that opens the app's search bar when the phone is shaken
// Structure generated by chatGPT, mainly for the physics aspect, and adjusted to our specifics with commentaries
public class ShakeDetector implements SensorEventListener {

    private static final float SHAKE_THRESHOLD_GRAVITY = 2.3F; //How sensitive the detection will be - The goal is to track a clear intentional shake, we have to keep it > 2.0F
    private static final int SHAKE_SLOP_TIME_MS = 500; // The interval between shakes, to avoid tracking a movement that was not followed by another one
    private long mShakeTimestamp; // Last recorded timestamp - used to track the interval between records

    private OnShakeListener mListener; // The listener that will react to the sensor and proceed with the associated actions

    public interface OnShakeListener {
        // An inteface to create a model for the method
        void onShake();
    }

    public ShakeDetector(OnShakeListener listener) {
        mListener = listener;
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        if (mListener != null) {
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];
            // When the sensor detects a change in its status, it will send an update to our listener
            // The event will come with new associated values that we collect to calculate the new gForce

            float gX = x / SensorManager.GRAVITY_EARTH;
            float gY = y / SensorManager.GRAVITY_EARTH;
            float gZ = z / SensorManager.GRAVITY_EARTH;
            // The values collected from the sensor are "compared" to their normal value for their axis

            float gForce = (float) Math.sqrt(gX * gX + gY * gY + gZ * gZ);
            // New GForce is calculated

            if (gForce > SHAKE_THRESHOLD_GRAVITY) {
                // If it exceeds the established threshold, we check that the interval between shakes is respected
                final long now = System.currentTimeMillis();
                if (mShakeTimestamp + SHAKE_SLOP_TIME_MS > now) {
                    // If the interval has not passed yet, the change is not taken into account (we leave the method)
                    return;
                }
                mShakeTimestamp = now;

                // We call the associated method in the Listener
                mListener.onShake();
            }
        }
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // Not relevant for our case
    }
}*/

